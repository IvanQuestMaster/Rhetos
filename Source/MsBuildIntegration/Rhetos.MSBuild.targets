<Project>
    <UsingTask AssemblyFile="RhetosVSIntegration.dll" TaskName="RhetosVSIntegration.ResolveRhetosProjectAssets" />

    <Target Name="ResolveRhetosBuildItems" BeforeTargets="ResolveRhetosProjectAssets;CollectUpToDateCheckInputDesignTime">
        <Message Text="ResolveRhetosBuildItems" />
        <ItemGroup>
            <RhetosBuild Include="DslScripts\**\*" />
            <RhetosBuild Include="DataMigration\**\*" />
            <RhetosBuildSettings Include="$(RhetosBuildSettingsFile)" Condition="Exists('$(RhetosBuildSettingsFile)')" />
        </ItemGroup>
        <ItemGroup>
            <UpToDateCheckInput Include="@(RhetosBuild);@(RhetosBuildSettings)" Set="RhetosBuild"/>
        </ItemGroup>
    </Target>

    <Target Name="ResolveRhetosProjectAssets" DependsOnTargets="ResolveLockFileReferences;ResolveAssemblyReferences;ResolveReferences" BeforeTargets="CoreCompile">
        <Message Text="ResolveRhetosProjectAssets" />
        <ResolveRhetosProjectAssets
            ProjectDirectory="$(ProjectDir)."
            ProjectContentFiles="@(RhetosBuild)"
            Assemblies="@(ReferencePath)"
            AssemblyName="$(AssemblyName)"
            GeneratedAssetsFolder="obj\Rhetos\RhetosAssets"
            IntermediateOutputFolder="$(BaseIntermediateOutputPath)Rhetos"
            TargetPath="$(TargetPath)"
            TargetAssetsFolder="$(TargetDir)RhetosAssets" />
        <WriteLinesToFile Lines="@(RhetosBuild);@(RhetosBuildSettings)" Overwrite="True" WriteOnlyWhenDifferent="True" File="$(RhetosBuildItemsFile)"/>
    </Target>

    <Target Name="ResolveBuildRhetosAppTargetInput">
        <Message Text="ResolveBuildRhetosAppTargetInput" /> 
        <ItemGroup>
            <RhetosInput Include="$(RhetosBuildItemsFile)" />
            <RhetosInput Include="$(BaseIntermediateOutputPath)project.assets.json" />
            <RhetosInput Include="@(RhetosBuildSettings)" />
        </ItemGroup>
    </Target>

    <Target Name="BuildRhetosApp" DependsOnTargets="ResolveRhetosProjectAssets;ResolveBuildRhetosAppTargetInput" BeforeTargets="CoreCompile" Condition="'$(RhetosBuild)'=='True' and $(BuildingProject)=='True'" Inputs="@(RhetosInput);@(RhetosBuild);@(ReferencePath)" Outputs="@(RhetosOutput)">
        <Message Text="BuildRhetosApp" />
        <Delete Files="$(RhetosBuildCompleteFile)" />
        <Exec Command="&quot;$(RhetosCliExecutablePath)&quot; build &quot;$(ProjectDir).&quot; --msbuild-format" CustomErrorRegularExpression="\[Error\]" CustomWarningRegularExpression="\[Warn\]" />
        <WriteLinesToFile File="$(RhetosBuildCompleteFile)" Lines="" Overwrite="true" />
    </Target>

    <Target Name="AddRhetosSourceFiles" DependsOnTargets="BuildRhetosApp" BeforeTargets="CoreCompile">
        <Message Text="AddRhetosSourceFiles" />
        <ItemGroup>
            <RhetosSourceFiles Include="obj\Rhetos\RhetosSource\**\*.cs" />
            <Compile Include="@(RhetosSourceFiles)" />
        </ItemGroup>
        <WriteLinesToFile Lines="@(RhetosSourceFiles -> '%(FullPath)')" Overwrite="True" WriteOnlyWhenDifferent="True" File="$(BaseIntermediateOutputPath)Rhetos\RhetosGeneratedSourceFiles.txt"/>
    </Target>

    <Target Name="MarkRhetosGeneratedFilesToCopyToOutput" BeforeTargets="AssignTargetPaths" DependsOnTargets="BuildRhetosApp">
        <Message Text="MarkRhetosGeneratedFilesToCopyToOutput" />

        <ItemGroup>
            <RhetosAssets Include="obj\Rhetos\RhetosAssets\**" />
            <None Include="@(RhetosAssets)" CopyToOutputDirectory="PreserveNewest" Link="RhetosAssets\%(RecursiveDir)%(Filename)%(Extension)"/>

            <!-- The generated source is kept with binaries because in some cases we cannot guarantee that the newly generated code would be identical to the one in production. Some internal caching build optimizations may result with different ordering of the generated features. -->
            <RhetosDebugSources Include="obj\Rhetos\RhetosSource\**\*.cs" />
            <None Include="@(RhetosDebugSources)" CopyToOutputDirectory="PreserveNewest" Link="RhetosDebugSource\%(RecursiveDir)%(Filename)%(Extension)"/>

            <PluginScannerJson Include="$(BaseIntermediateOutputPath)Rhetos\PluginScanner.json" />
            <None Include="@(PluginScannerJson)" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)"/>
        </ItemGroup>

    </Target>

    <!-- Checking for Rhetos.Utilities.dll is a simple heuristics to determine if the project output is executable and can be used for dbupdate command.
    Libraries don't output dependencies by default. More complex cases should be configured manually by $(RhetosDeploy) property. -->
    <Target Name="DeployRhetosApp" DependsOnTargets="BuildRhetosApp;CopyFilesToOutputDirectory" AfterTargets="Build" Condition="'$(RhetosDeploy)'=='True' And Exists('$(RhetosBuildCompleteFile)') And Exists('$(TargetDir)\Rhetos.Utilities.dll')"
        Inputs="$(RhetosBuildCompleteFile)" Outputs="$(RhetosDatabaseUpdated)">
        <Message Text="DeployRhetosApp" />
        <Exec Command="&quot;$(TargetDir)rhetos.exe&quot; dbupdate &quot;$(TargetDir)\$(AssemblyName).dll&quot;" CustomErrorRegularExpression="\[Error\]" CustomWarningRegularExpression="\[Warn\]" />
        <WriteLinesToFile File="$(RhetosDatabaseUpdated)" Lines="" Overwrite="true" />
    </Target>
</Project>
