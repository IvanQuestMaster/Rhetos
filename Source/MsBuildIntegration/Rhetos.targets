<Project>
    <UsingTask AssemblyFile="RhetosVSIntegration.dll" TaskName="RhetosVSIntegration.ResolveRhetosProjectAssets" />

    <Target Name="ResolveRhetosProjectAssets" DependsOnTargets="ResolveNuGetPackageAssets;ResolveAssemblyReferences" BeforeTargets="CoreCompile">
        <Message Text="ResolveRhetosProjectAssets" />
        <ResolveRhetosProjectAssets ProjectDirectory="$(ProjectDir)." ProjectContentFiles="@(RhetosBuild)" Assemblies="@(ReferencePath)" AssemblyName="$(AssemblyName)" />      
    </Target>

    <Target Name="BuildRhetosApp" DependsOnTargets="ResolveRhetosProjectAssets;" BeforeTargets="CoreCompile" Condition="'$(RhetosBuild)'=='True' and $(BuildingProject)=='True'" Inputs="@(RhetosInput);@(RhetosBuild)" Outputs="@(RhetosOutput)">
        <Message Text="BuildRhetosApp" />
        <Delete Files="$(RhetosBuildCompleteFile)" />
        <Exec Command="&quot;$(RhetosCliExecutablePath)&quot; build --msbuild-format &quot;$(ProjectDir).&quot;" CustomErrorRegularExpression="\[Error\]" CustomWarningRegularExpression="\[Warn\]" />
        <WriteLinesToFile File="$(RhetosBuildCompleteFile)" Lines="" Overwrite="true" />
    </Target>

    <Target Name="AddRhetosSourceFiles" DependsOnTargets="BuildRhetosApp" BeforeTargets="CoreCompile" >
        <Message Text="AddRhetosSourceFiles" />
        <ItemGroup>
            <RhetosSourceFiles Include="obj\Rhetos\RhetosSource\**\*.cs" />
            <Compile Include="@(RhetosSourceFiles)" />
        </ItemGroup>
        <WriteLinesToFile Lines="@(RhetosSourceFiles -> '%(FullPath)')" Overwrite="True" WriteOnlyWhenDifferent="True" File="$(BaseIntermediateOutputPath)Rhetos\RhetosGeneratedSourceFiles.txt"/>
    </Target>
    
    <Target Name="CopyRhetosFilesToOutput" DependsOnTargets="AddRhetosSourceFiles" AfterTargets="CopyFilesToOutputDirectory" >
        <Message Text="CopyRhetosFilesToOutput" />

        <!--Generated sources-->
        <Copy SourceFiles="@(RhetosSourceFiles)" Retries="$(CopyRetryCount)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
            DestinationFiles="@(RhetosSourceFiles->'$(TargetDir)RhetosDebugSource\%(RecursiveDir)%(Filename)%(Extension)')" 
            SkipUnchangedFiles="True">
            <Output TaskParameter="CopiedFiles" ItemName="_RhetosDebugSourceFiles" />
        </Copy>
        <ItemGroup>
            <_RhetosDebugSourceFilesToDelete Include="$(TargetDir)RhetosDebugSource\**\*.cs" Exclude="@(_RhetosDebugSourceFiles)" />
        </ItemGroup>
        <Delete Files="@(_RhetosDebugSourceFilesToDelete)" />
        <ItemGroup>
            <FileWrites Include="@(_RhetosDebugSourceFiles)" />
        </ItemGroup>

        <!--Assets folder-->
        <ItemGroup>
            <_RhetosAssetsFilesToCopy Include="obj\Rhetos\RhetosAssets\**" />
        </ItemGroup>        
        <Copy SourceFiles="@(_RhetosAssetsFilesToCopy)" Retries="$(CopyRetryCount)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
            DestinationFiles="@(_RhetosAssetsFilesToCopy->'$(TargetDir)RhetosAssets\%(RecursiveDir)%(Filename)%(Extension)')" 
            SkipUnchangedFiles="True">
            <Output TaskParameter="CopiedFiles" ItemName="_CopiedRhetosAssetsFiles" />
        </Copy>
        <ItemGroup>
            <_RhetosAssetsFilesToDelete Include="$(TargetDir)RhetosAssets\*" Exclude="@(_CopiedRhetosAssetsFiles)" />
        </ItemGroup>
        <Delete Files="@(_RhetosAssetsFilesToDelete)" />
        <ItemGroup>
            <FileWrites Include="@(_CopiedRhetosAssetsFiles)" />
        </ItemGroup>        
    </Target>

    <Target Name="DeployRhetosApp" DependsOnTargets="BuildRhetosApp;CopyFilesToOutputDirectory" AfterTargets="Build" Condition="'$(RhetosDeploy)'=='True' And Exists('$(RhetosBuildCompleteFile)')"
        Inputs="$(RhetosBuildCompleteFile)" Outputs="$(RhetosDatabaseUpdated)">
        <Message Text="DeployRhetosApp" />
        <Exec Command="&quot;$(TargetDir)rhetos.exe&quot; dbupdate &quot;$(ProjectDir).&quot;" CustomErrorRegularExpression="\[Error\]" CustomWarningRegularExpression="\[Warn\]" />
        <Exec Command="&quot;$(TargetDir)rhetos.exe&quot; appinitialize &quot;$(ProjectDir).&quot;" CustomErrorRegularExpression="\[Error\]" CustomWarningRegularExpression="\[Warn\]" />
        <WriteLinesToFile File="$(RhetosDatabaseUpdated)" Lines="" Overwrite="true" />
    </Target>
</Project>
